{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/servicios/login.service\";\nexport class LoginComponent {\n  constructor(loginService) {\n    this.loginService = loginService;\n    pri;\n    listaUsuarios: User;\n    this.LoginForm = new FormGroup({\n      usuario: new FormControl('', [Validators.email, Validators.required]),\n      clave: new FormControl('', [Validators.required])\n    });\n    loginService.getListaUsuarios().subscribe(data => {\n      this.listaUsuarios = data;\n      console.dir(this.listaUsuarios);\n    });\n  }\n  EnviarFormulario() {\n    const usuario = this.LoginForm.get('usuario')?.value;\n    const clave = this.LoginForm.get('clave')?.value;\n    if (this.LoginForm.valid) {\n      for (let i = 0; i < this.listaUsuarios.length; i++) {\n        const mail = this.listaUsuarios[i].email;\n        const pass = this.listaUsuarios[i].address.geo.lat;\n        console.log('usuarios:' + mail + ' => password: ' + pass);\n        if (usuario == mail && clave == pass) {\n          /* this.MuestroBotton = 'login correcto';\n          console.warn(\"Usuario correcto\");\n          //cambio de variable LogingOK proveniente del servicio\n          this.LoginService.registrarUsuario(mail);\n          this.LoginService.cambiarValor('lista'); */\n        } else {\n          /* this.contadorError++;\n          console.log(this.contadorError);\n          if(this.contadorError == 9){\n            this.LoginService.cambiarValor('ERRORLOG'); */\n        }\n      }\n    } else {\n      console.log(this.Controles);\n      console.log(this.LoginForm);\n    }\n  }\n  get Controles() {\n    return this.LoginForm.controls;\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.LoginService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 2,\n    vars: 0,\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"login works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","LoginComponent","constructor","loginService","pri","listaUsuarios","User","LoginForm","usuario","email","required","clave","getListaUsuarios","subscribe","data","console","dir","EnviarFormulario","get","value","valid","i","length","mail","pass","address","geo","lat","log","Controles","controls","_","i0","ɵɵdirectiveInject","i1","LoginService","_2","selectors","decls","vars","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\guido\\OneDrive\\ISTEA\\Programacion Web\\Parcial2\\Parcial2GuidoCapucciati\\src\\app\\componentes\\login\\login.component.ts","C:\\Users\\guido\\OneDrive\\ISTEA\\Programacion Web\\Parcial2\\Parcial2GuidoCapucciati\\src\\app\\componentes\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { User , Address, Geo, Company } from 'src/app/model/User';\nimport { LoginService } from 'src/app/servicios/login.service';\n\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n\n  listaUsuarios : any; \n\n  LoginForm: FormGroup;\n\n  constructor(public loginService: LoginService ){\n\n    pri listaUsuarios : User;\n\n\n    this.LoginForm = new FormGroup ({\n      usuario: new FormControl('', [Validators.email, Validators.required]),\n      clave: new FormControl('',[Validators.required])\n      });\n\n    loginService.getListaUsuarios().subscribe(\n      data => { \n        this.listaUsuarios = data;\n        console.dir(this.listaUsuarios);\n      }\n    );\n\n\n  }\n\n  EnviarFormulario(){\n\n    const usuario = this.LoginForm.get('usuario')?.value;\n    const clave = this.LoginForm.get('clave')?.value;\n\n    if (this.LoginForm.valid){\n\n      for (let i = 0; i < this.listaUsuarios.length; i++) {\n        const mail = this.listaUsuarios[i].email;\n        const pass = this.listaUsuarios[i].address.geo.lat;\n        console.log('usuarios:' + mail + ' => password: ' + pass);\n        if (usuario == mail && clave == pass){\n          /* this.MuestroBotton = 'login correcto';\n          console.warn(\"Usuario correcto\");\n          //cambio de variable LogingOK proveniente del servicio\n          this.LoginService.registrarUsuario(mail);\n          this.LoginService.cambiarValor('lista'); */\n         } else {\n          /* this.contadorError++;\n          console.log(this.contadorError);\n          if(this.contadorError == 9){\n            this.LoginService.cambiarValor('ERRORLOG'); */\n          }\n        }      \n    }else{\n      console.log(this.Controles);\n      console.log(this.LoginForm);\n    }\n    \n  }\n\n  get Controles(){\n    return this.LoginForm.controls;\n  }\n\n\n\n\n\n\n}\n","<p>login works!</p>\n"],"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;AAWnE,OAAM,MAAOC,cAAc;EAOzBC,YAAmBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;IAE7BC,GAAG;IAACC,aAAa,EAAGC,IAAI;IAGxB,IAAI,CAACC,SAAS,GAAG,IAAIR,SAAS,CAAE;MAC9BS,OAAO,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAE,CAACE,UAAU,CAACS,KAAK,EAAET,UAAU,CAACU,QAAQ,CAAC,CAAC;MACrEC,KAAK,EAAE,IAAIb,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACU,QAAQ,CAAC;KAC9C,CAAC;IAEJP,YAAY,CAACS,gBAAgB,EAAE,CAACC,SAAS,CACvCC,IAAI,IAAG;MACL,IAAI,CAACT,aAAa,GAAGS,IAAI;MACzBC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,aAAa,CAAC;IACjC,CAAC,CACF;EAGH;EAEAY,gBAAgBA,CAAA;IAEd,MAAMT,OAAO,GAAG,IAAI,CAACD,SAAS,CAACW,GAAG,CAAC,SAAS,CAAC,EAAEC,KAAK;IACpD,MAAMR,KAAK,GAAG,IAAI,CAACJ,SAAS,CAACW,GAAG,CAAC,OAAO,CAAC,EAAEC,KAAK;IAEhD,IAAI,IAAI,CAACZ,SAAS,CAACa,KAAK,EAAC;MAEvB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAAChB,aAAa,CAACiB,MAAM,EAAED,CAAC,EAAE,EAAE;QAClD,MAAME,IAAI,GAAG,IAAI,CAAClB,aAAa,CAACgB,CAAC,CAAC,CAACZ,KAAK;QACxC,MAAMe,IAAI,GAAG,IAAI,CAACnB,aAAa,CAACgB,CAAC,CAAC,CAACI,OAAO,CAACC,GAAG,CAACC,GAAG;QAClDZ,OAAO,CAACa,GAAG,CAAC,WAAW,GAAGL,IAAI,GAAG,gBAAgB,GAAGC,IAAI,CAAC;QACzD,IAAIhB,OAAO,IAAIe,IAAI,IAAIZ,KAAK,IAAIa,IAAI,EAAC;UACnC;;;;;QAAA,CAKA,MAAM;UACN;;;;QAAA;;KAML,MAAI;MACHT,OAAO,CAACa,GAAG,CAAC,IAAI,CAACC,SAAS,CAAC;MAC3Bd,OAAO,CAACa,GAAG,CAAC,IAAI,CAACrB,SAAS,CAAC;;EAG/B;EAEA,IAAIsB,SAASA,CAAA;IACX,OAAO,IAAI,CAACtB,SAAS,CAACuB,QAAQ;EAChC;EAAC,QAAAC,CAAA,G;qBA5DU9B,cAAc,EAAA+B,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,YAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdnC,cAAc;IAAAoC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZ3BV,EAAA,CAAAY,cAAA,QAAG;QAAAZ,EAAA,CAAAa,MAAA,mBAAY;QAAAb,EAAA,CAAAc,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}