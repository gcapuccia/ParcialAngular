{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AppComponent {\n  constructor() {\n    this.title = 'Parcial2GuidoCapucciati';\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 1,\n    vars: 0,\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"router-outlet\");\n      }\n    },\n    dependencies: [i1.RouterOutlet],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["AppComponent","constructor","title","_","_2","selectors","decls","vars","template","AppComponent_Template","rf","ctx","i0","ɵɵelement"],"sources":["C:\\Users\\guido\\OneDrive\\ISTEA\\Programacion Web\\Parcial2\\Parcial2GuidoCapucciati\\src\\app\\app.component.ts","C:\\Users\\guido\\OneDrive\\ISTEA\\Programacion Web\\Parcial2\\Parcial2GuidoCapucciati\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Parcial2GuidoCapucciati';\n}\n","\n\n\n<!-- <h5><a [routerLink]=\"['/home']\">Cargar Su Garantia</a></h5>\n<h5><a [routerLink]=\"['/admin']\">Administrador</a></h5>\n<h5><a [routerLink]=\"['/galeria']\">Galeria de Fotos</a></h5> -->\n\n<router-outlet></router-outlet>\n\n\n\n<!-- //inyectamos en el constructor un objeto del tipo http client para poder\n  // a traves de este objeto realizar las peticiones necesarias\n  constructor(private http: HttpClient) { }\n\n  //Importar Models para poner en funcion \n  import { MODELO } from '../model/modelo';\n\n\n  //este metodo llamara a la api rest y nos traera un json con todos los registros \n  //que tengamos en la tabla BIKE de la base de datos SQLite\n  getBikesSale(): Observable<BikeSale[]> {\n    return this.http.get<BikeSale[]>('/server/api/v1/bikes');\n  }\n\n  //este metodo recibira un id y con este llamara a la api rest y nos traera un json con un unico registro \n  //que tengamos en la tabla BIKE de la base de datos SQLite  \n  getBikeSaleById(id: number): Observable<BikeSale> {\n    return this.http.get<BikeSale>('/server/api/v1/bikes/' + id);\n  }\n\n  //este metodo llama al api y nos borra el registro que le indiquemos \n  //a traves del parametro id\n  deleteBikeById(id: number) {\n    return this.http.get('/server/api/v1/bikes/borrar/' + id);\n  }\n\n  //este metodo llama al api y nos permite crear un registro nuevo en la bae de datos del back end \n  createdBikeRegistration(bike: any) {\n    let body = JSON.stringify(bike);\n    //llamamos al metodo post de la libreria httpClient enviandole como parametro la url de la api ,\n    //el objeto json con los datos a persisitir\n    return this.http.post('/server/api/v1/bikes/', body, httpOptions);\n  }\n\n\n--------------------------------------------------\n\n\nconstructor(private bikeService: BikeService, private route: ActivatedRoute) {\n\n  }\nngOnInit(): void {\n    //capturamos el id que recibimos como parametro en la ruta \n    let id: number = this.route.snapshot.params[\"id\"];\n    console.log(id);\n\n    this.bikeService.getBikeSaleById(id).subscribe(\n      data => this.bikeSale = data,\n      err => alert(\"No se supo encontra la bike con id \" + id + \" en la base de datos SQLite\")\n    );\n\n  }\n\n  BORRAR\n\n  borrarBicicletaPorId(idBike: any): void {\n    console.log(\"llamando a la api para eliminar el dato con id \" + idBike);\n    this.bikeService.deleteBikeById(idBike).subscribe(\n      data => {\n        this.toastr.success('salio todo bien', 'Ameegooo');\n        console.log(\"salio todo bien , y pudimos borrar el registro con id \" + idBike);\n        this.ngOnInit();\n      },\n      err => console.error('Fallo el request al end point point GET /api/v1/bikes/borrar/' + idBike)\n    )\n  }\n\n -->"],"mappings":";;AAOA,OAAM,MAAOA,YAAY;EALzBC,YAAA;IAME,KAAAC,KAAK,GAAG,yBAAyB;;EAClC,QAAAC,CAAA,G;qBAFYH,YAAY;EAAA;EAAA,QAAAI,EAAA,G;UAAZJ,YAAY;IAAAK,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCAzBE,EAAA,CAAAC,SAAA,oBAA+B"},"metadata":{},"sourceType":"module","externalDependencies":[]}